// Code generated by MockGen. DO NOT EDIT.
// Source: module/team/repository.go

// Package mock_team is a generated GoMock package.
package mock_team

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/yezarela/go-soccer/model"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// ListTeam mocks base method
func (m *MockRepository) ListTeam(ctx context.Context) ([]model.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTeam", ctx)
	ret0, _ := ret[0].([]model.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTeam indicates an expected call of ListTeam
func (mr *MockRepositoryMockRecorder) ListTeam(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTeam", reflect.TypeOf((*MockRepository)(nil).ListTeam), ctx)
}

// GetTeam mocks base method
func (m *MockRepository) GetTeam(ctx context.Context, id string) (*model.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTeam", ctx, id)
	ret0, _ := ret[0].(*model.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTeam indicates an expected call of GetTeam
func (mr *MockRepositoryMockRecorder) GetTeam(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTeam", reflect.TypeOf((*MockRepository)(nil).GetTeam), ctx, id)
}

// CreateTeam mocks base method
func (m *MockRepository) CreateTeam(ctx context.Context, data model.Team) (*model.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTeam", ctx, data)
	ret0, _ := ret[0].(*model.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTeam indicates an expected call of CreateTeam
func (mr *MockRepositoryMockRecorder) CreateTeam(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTeam", reflect.TypeOf((*MockRepository)(nil).CreateTeam), ctx, data)
}
